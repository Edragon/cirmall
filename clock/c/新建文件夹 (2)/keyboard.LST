C51 COMPILER V9.02   KEYBOARD                                                              01/10/2009 00:34:35 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN keyboard.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE keyboard.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          *******************************************************************************
   3          *                     《手把手教你学51单片机(C语言版)》
   4          *                    配套 KST-51 单片机开发板 示例源代码
   5          *
   6          *         (c) 版权所有 2014 金沙滩工作室/清华大学出版社 保留所有权利
   7          *                 获取更多资料请访问：http://www.kingst.org
   8          *
   9          * 文件名：keyboard.c
  10          * 描  述：4*4矩阵按键驱动模块
  11          * 版本号：v1.0.0
  12          * 备  注：
  13          *******************************************************************************
  14          */
  15          
  16          #define  _KEY_BOARD_C
  17          #include "config.h"
  18          #include "keyboard.h"
  19          #include "Time.h"
  20           uint8 code KeyCodeMap[3] =  {0x25,  0x26,0x28   };  //数字键1、数字键2、数字键3、向上键
  21           static uint8 KeySta[3] =  {1, 1, 1};  //全部矩阵按键的当前状态
  22            uint16 pdata KeyDownTime[] ={ 0,0,0}; //每个按键按下的持续时间，单位ms
  23          
  24                  
  25          /* 按键驱动函数，检测按键动作，调度相应动作函数，需在主循环中调用 */
  26          void KeyDriver()
  27          {
  28   1          uint8 i;
  29   1          static uint8  backup[3] = {1, 1, 1};
  30   1           
  31   1          for (i=0; i<3; i++)  //循环检测按键
  32   1          {
  33   2             
  34   2                  if (backup[i] != KeySta[i] )   //检测按键动作
  35   2                  {
  36   3                                      LED=0;
  37   3                      if (backup[i] != 0)           //按键按下时执行动作
  38   3                      {
  39   4                          KeyAction(KeyCodeMap[i]); //调用按键动作函数
  40   4                      }
  41   3                      backup[i] = KeySta[i];     //刷新前一次的备份值
  42   3      
  43   3                  }
  44   2              
  45   2                                              if(     KeyDownTime[0]>=1000)
  46   2                                              {
  47   3                              m=0 ; //调用按键动作函数
  48   3                                                      SwitchSystemSta();
  49   3                                                       KeyDownTime[0]=0;  
  50   3                              }
  51   2          }
  52   1      }
  53          /* 按键扫描函数，需在定时中断中调用，推荐调用间隔1ms */
  54          void KeyScan()
  55          {
C51 COMPILER V9.02   KEYBOARD                                                              01/10/2009 00:34:35 PAGE 2   

  56   1          uint8 i;
  57   1          static uint8 keybuf[3] = {0xFF, 0xFF,  0xFF}; //矩阵按键扫描缓冲区
  58   1              
  59   1      
  60   1          //将一行的4个按键值移入缓冲区
  61   1          keybuf[0] = (keybuf[0] << 1) | KEY_IN_1;
  62   1          keybuf[1] = (keybuf[1] << 1) | KEY_IN_2;
  63   1          keybuf[2] = (keybuf[2] << 1) | KEY_IN_3;
  64   1          
  65   1          //消抖后更新按键状态
  66   1          for (i=0; i<3; i++)  //每行4个按键，所以循环4次
  67   1          {
  68   2              if ((keybuf[i] & 0x0F) == 0x00)
  69   2              {   //连续4次扫描值为0，即4*4ms内都是按下状态时，可认为按键已稳定的按下
  70   3                  KeySta[i] = 0;
  71   3                               KeyDownTime[i] +=1;
  72   3              }
  73   2              else if ((keybuf[i] & 0x0F) == 0x0F)
  74   2              {   //连续4次扫描值为1，即4*4ms内都是弹起状态时，可认为按键已稳定的弹起
  75   3                  KeySta[i] = 1;
  76   3                          KeyDownTime[i]      =0;
  77   3              }
  78   2          }
  79   1          //执行下一次的扫描输出
  80   1       
  81   1         
  82   1        
  83   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    178    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      6    ----
   DATA SIZE        =      9       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
