C51 COMPILER V9.02   DS1302                                                                01/10/2009 00:34:34 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN DS1302.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DS1302.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          *******************************************************************************
   3          *                     《手把手教你学51单片机(C语言版)》
   4          *                    配套 KST-51 单片机开发板 示例源代码
   5          *
   6          *         (c) 版权所有 2014 金沙滩工作室/清华大学出版社 保留所有权利
   7          *                 获取更多资料请访问：http://www.kingst.org
   8          *
   9          * 文件名：DS1302.c
  10          * 描  述：实时时钟芯片DS1302驱动模块
  11          * 版本号：v1.0.0
  12          * 备  注：
  13          *******************************************************************************
  14          */
  15          
  16          #define  _DS1302_C
  17          #include "config.h"
  18          #include "DS1302.h"
  19          
  20          /* 发送一个字节到DS1302通信总线上 */
  21          void DS1302ByteWrite(uint8 dat)
  22          {
  23   1          uint8 mask;
  24   1          
  25   1          for (mask=0x01; mask!=0; mask<<=1)  //低位在前，逐位移出
  26   1          {
  27   2              if ((mask&dat) != 0) //首先输出该位数据
  28   2                  DS1302_IO = 1;
  29   2              else
  30   2                  DS1302_IO = 0;
  31   2              DS1302_CK = 1;       //然后拉高时钟
  32   2              DS1302_CK = 0;       //再拉低时钟，完成一个位的操作
  33   2          }
  34   1          DS1302_IO = 1;           //最后确保释放IO引脚
  35   1      }
  36          /* 由DS1302通信总线上读取一个字节 */
  37          uint8 DS1302ByteRead()
  38          {
  39   1          uint8 mask;
  40   1          uint8 dat = 0;
  41   1          
  42   1          for (mask=0x01; mask!=0; mask<<=1)  //低位在前，逐位读取
  43   1          {
  44   2              if (DS1302_IO != 0)  //首先读取此时的IO引脚，并设置dat中的对应位
  45   2              {
  46   3                  dat |= mask;
  47   3              }
  48   2              DS1302_CK = 1;       //然后拉高时钟
  49   2              DS1302_CK = 0;       //再拉低时钟，完成一个位的操作
  50   2          }
  51   1          return dat;              //最后返回读到的字节数据
  52   1      }
  53          /* 用单次写操作向某一寄存器写入一个字节，reg-寄存器地址，dat-待写入字节 */
  54          void DS1302SingleWrite(uint8 reg, uint8 dat)
  55          {
C51 COMPILER V9.02   DS1302                                                                01/10/2009 00:34:34 PAGE 2   

  56   1          DS1302_CE = 1;                   //使能片选信号
  57   1          DS1302ByteWrite((reg<<1)|0x80);  //发送写寄存器指令
  58   1          DS1302ByteWrite(dat);            //写入字节数据
  59   1          DS1302_CE = 0;                   //除能片选信号
  60   1      }
  61          /* 用单次读操作从某一寄存器读取一个字节，reg-寄存器地址，返回值-读到的字节 */
  62          uint8 DS1302SingleRead(uint8 reg)
  63          {
  64   1          uint8 dat;
  65   1          
  66   1          DS1302_CE = 1;                   //使能片选信号
  67   1          DS1302ByteWrite((reg<<1)|0x81);  //发送读寄存器指令
  68   1          dat = DS1302ByteRead();          //读取字节数据
  69   1          DS1302_CE = 0;                   //除能片选信号
  70   1          
  71   1          return dat;
  72   1      }
  73          /* 用突发模式连续写入8个寄存器数据，dat-待写入数据指针 */
  74          void DS1302BurstWrite(uint8 *dat)
  75          {
  76   1          uint8 i;
  77   1          
  78   1          DS1302_CE = 1;
  79   1          DS1302ByteWrite(0xBE);  //发送突发写寄存器指令
  80   1          for (i=0; i<8; i++)     //连续写入8字节数据
  81   1          {
  82   2              DS1302ByteWrite(dat[i]);
  83   2          }
  84   1          DS1302_CE = 0;
  85   1      }
  86          /* 用突发模式连续读取8个寄存器的数据，dat-读取数据的接收指针 */
  87          void  DS1302BurstRead(uint8 *dat)
  88          {
  89   1          uint8 i;
  90   1          
  91   1          DS1302_CE = 1;
  92   1          DS1302ByteWrite(0xBF);  //发送突发读寄存器指令
  93   1          for (i=0; i<8; i++)     //连续读取8个字节
  94   1          {
  95   2              dat[i] = DS1302ByteRead();
  96   2          }
  97   1          DS1302_CE = 0;
  98   1      }
  99          /* 获取实时时间，即读取DS1302当前时间并转换为时间结构体格式 */
 100          void GetRealTime(struct sTime *time)
 101          {
 102   1          uint8 buf[8];
 103   1          
 104   1          DS1302BurstRead(buf);
 105   1          time->year = buf[6] + 0x2000;
 106   1          time->mon  = buf[4];
 107   1          time->day  = buf[3];
 108   1          time->hour = buf[2];
 109   1          time->min  = buf[1];
 110   1          time->sec  = buf[0];
 111   1          time->week = buf[5];
 112   1      }
 113          /* 设定实时时间，时间结构体格式的设定时间转换为数组并写入DS1302 */
 114          void SetRealTime(struct sTime *time)
 115          {
 116   1          uint8 buf[8];
 117   1          
C51 COMPILER V9.02   DS1302                                                                01/10/2009 00:34:34 PAGE 3   

 118   1          buf[7] = 0;
 119   1          buf[6] = time->year;
 120   1          buf[5] = time->week;
 121   1          buf[4] = time->mon;
 122   1          buf[3] = time->day;
 123   1          buf[2] = time->hour;
 124   1          buf[1] = time->min;
 125   1          buf[0] = time->sec;
 126   1          DS1302BurstWrite(buf);
 127   1      }
 128          /* DS1302初始化，如发生掉电则重新设置初始时间 */
 129          void InitDS1302()
 130          {
 131   1          uint8 dat;
 132   1          struct sTime code InitTime[] = {  0x2018,0x09,0x16, 0x12,0x00,0x00, 0x06};
 133   1          
 134   1          DS1302_CE = 0;  //初始化DS1302通信引脚
 135   1          DS1302_CK = 0;
 136   1          dat = DS1302SingleRead(0);  //读取秒寄存器
 137   1          if ((dat & 0x80) != 0)      //由秒寄存器最高位CH的值判断DS1302是否已停止
 138   1          {
 139   2              DS1302SingleWrite(7, 0x00);  //撤销写保护以允许写入数据
 140   2              SetRealTime(&InitTime);      //设置DS1302为默认的初始时间
 141   2          }
 142   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    348    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      25
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
