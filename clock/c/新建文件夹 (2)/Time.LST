C51 COMPILER V9.02   TIME                                                                  01/10/2009 00:34:35 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE TIME
OBJECT MODULE PLACED IN Time.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Time.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          *******************************************************************************
   3          *                     《手把手教你学51单片机(C语言版)》
   4          *                    配套 KST-51 单片机开发板 示例源代码
   5          *
   6          *         (c) 版权所有 2014 金沙滩工作室/清华大学出版社 保留所有权利
   7          *                 获取更多资料请访问：http://www.kingst.org
   8          *
   9          * 文件名：Time.c
  10          * 描  述：第19章 多功能电子钟 主要功能文件
  11          * 版本号：v1.0.0
  12          * 备  注：详情见第19章19.4节
  13          *******************************************************************************
  14          */
  15          
  16          #define  _TIME_C
  17          #include "config.h"
  18          #include "DS1302.h"
  19          #include "Lcd1602.h"
  20          #include "Time.h"
  21          #include "main.h"
  22          #define  ascii   (num+'0')
  23          bit      key=0;
  24           bit bakekey=1;
  25          bit staMute = 0;  //静音标志位
  26          uint8 AlarmHour = 0x07;  //闹钟时间的小时数
  27          uint8 AlarmMin  = 0x30;  //闹钟时间的分钟数
  28          struct sTime CurTime;    //当前日期时间                 
  29          uint8 num=0;
  30          uint8 m=5;
  31          uint8 num1=0;
  32          uint8 SetIndex=0;
  33          uint8 pdata SetAlarmHour;    //闹钟小时数设置缓冲
  34          uint8 pdata SetAlarmMin;     //闹钟分钟数设置缓冲
  35          struct sTime pdata SetTime;
  36           void delay(uint8 ms)
  37           {
  38   1              uint8 i,m,k;
  39   1              for(i=ms;i>0;i--)
  40   1                      for(k=25;k>0;k--)
  41   1                      for(m=14;m>0;m--);
  42   1       }
  43          
  44          /* 获取当前日期时间，并刷新时间和星期的显示 */
  45          void RefreshTime()
  46          {
  47   1         
  48   1          uint8 pdata str[9];
  49   1          GetRealTime(&CurTime);
  50   1          str[0] = (CurTime.hour>>4) + '0';   //小时
  51   1          str[1] = (CurTime.hour&0xF) + '0';
  52   1          str[2] = ':';
  53   1          str[3] = (CurTime.min>>4) + '0';    //分钟
  54   1          str[4] = (CurTime.min&0xF) + '0';
  55   1              str[5] = ':';
C51 COMPILER V9.02   TIME                                                                  01/10/2009 00:34:35 PAGE 2   

  56   1              str[6] = (CurTime.sec>>4) + '0';   //小时
  57   1          str[7] = (CurTime.sec&0xF) + '0';
  58   1          str[8] = '\0';
  59   1          LcdShowStr(1, 1, str);          
  60   1                            
  61   1      }
  62          
  63          /* 日期刷新函数，ops-刷新选项：为0时只当日期变化才刷新，非0则立即刷新 */
  64          void RefreshDate(uint8 ops)
  65          {
  66   1          uint8 pdata str[11];
  67   1        
  68   1         static uint8 backup=0;
  69   1          if ((backup!=CurTime.day) || (ops!=0))
  70   1          {
  71   2              str[0] = ((CurTime.year>>12) & 0xF) + '0';  //4位数年份
  72   2              str[1] = ((CurTime.year>>8) & 0xF) + '0';
  73   2              str[2] = ((CurTime.year>>4) & 0xF) + '0';
  74   2              str[3] = (CurTime.year & 0xF) + '0';
  75   2              str[4] = '-';                        //分隔符
  76   2              str[5] = (CurTime.mon >> 4) + '0';   //月份
  77   2              str[6] = (CurTime.mon & 0xF) + '0';
  78   2              str[7] = '-';                        //分隔符
  79   2              str[8] = (CurTime.day >> 4) + '0';   //日期
  80   2              str[9] = (CurTime.day & 0xF) + '0';
  81   2              str[10] = '\0';         //字符串结束符
  82   2              LcdShowStr(0, 0, str);  //显示到液晶上
  83   2              backup = CurTime.day;   //刷新上次日期值
  84   2                      num1 = CurTime.week;
  85   2           
  86   2                      LcdShowStr(10, 0, "week");  //显示提示标题
  87   2            LcdShowChar(15, 0, num1);            //显示设置时间值
  88   2                
  89   2          }
  90   1      }
  91          /* 刷新闹钟时间的显示 */
  92          void RefreshAlarm()
  93          {
  94   1          uint8 pdata str[6];
  95   1          
  96   1          LcdShowStr(6, 0, "Alarm ");     //显示提示标题
  97   1          str[0] = (AlarmHour >> 4) + '0';   //闹钟小时数
  98   1          str[1] = (AlarmHour & 0xF) + '0';
  99   1          str[2] = ':';                      //分隔符
 100   1          str[3] = (AlarmMin >> 4) + '0';    //闹钟分钟数
 101   1          str[4] = (AlarmMin & 0xF) + '0';
 102   1          str[5] = '\0';                     //字符串结束符
 103   1          LcdShowStr(6, 1, str);             //显示到液晶上
 104   1      }
 105          /* 闹钟监控函数，抵达设定的闹钟时间时执行闹铃 */
 106          void AlarmMonitor()
 107          {
 108   1              if(     staMute==0)
 109   1              {
 110   2                        LcdShowChar(11, 1, 7);
 111   2                        
 112   2              }
 113   1              else  
 114   1                LcdShowChar(11, 1,0x20);
 115   1                
 116   1          if ((CurTime.hour==AlarmHour) && (CurTime.min==AlarmMin)) //检查时间匹配
 117   1          {
C51 COMPILER V9.02   TIME                                                                  01/10/2009 00:34:35 PAGE 3   

 118   2      
 119   2                               if (!staMute)  //检查是否静音
 120   2                               BUZZER = ~BUZZER;  //实现蜂鸣器断续鸣叫
 121   2                      else
 122   2                               BUZZER = 1;
 123   2          }
 124   1          else
 125   1          {
 126   2           
 127   2              BUZZER = 1;
 128   2          }
 129   1      
 130   1      }
 131          /* 将设置日期及标题提示显示到液晶上 */
 132          void ShowSetDay()
 133          {
 134   1          uint8 pdata str[10];
 135   1            
 136   1          str[0]  = ((SetTime.year>>4) & 0xF) + '0';  //2位数年份
 137   1          str[1]  = (SetTime.year & 0xF) + '0';
 138   1          str[2]  = '-';
 139   1          str[3]  = (SetTime.mon >> 4) + '0';   //月份
 140   1          str[4]  = (SetTime.mon & 0xF) + '0';
 141   1          str[5]  = '-';
 142   1          str[6]  = (SetTime.day >> 4) + '0';   //日期
 143   1          str[7]  = (SetTime.day & 0xF) + '0';
 144   1          str[8]  = '-';
 145   1         
 146   1         str[9] = '\0';
 147   1          LcdShowStr(4, 0, "Set  day");  //显示提示标题
 148   1          LcdShowStr(1, 1, str);              //显示设置时间值
 149   1               num1 = SetTime.week & 0x07 ; //星期
 150   1                LcdShowChar(10, 1,num1);
 151   1              
 152   1                }
 153           /* 将设置时间及标题提示显示到液晶上 */
 154          void ShowSetTime()
 155          {
 156   1          uint8 pdata str[6];
 157   1           
 158   1          str[0] = (SetTime.hour >> 4) + '0';  //小时
 159   1          str[1] = (SetTime.hour & 0xF) + '0';
 160   1          str[2] = ':';
 161   1          str[3] = (SetTime.min >> 4) + '0';   //分钟
 162   1          str[4] = (SetTime.min & 0xF) + '0';
 163   1          str[5] = '\0';
 164   1          LcdShowStr(4, 0, "Set  Time");  //显示提示标题
 165   1          LcdShowStr(1, 1, str);              //显示设置时间值
 166   1      }
 167          /* 将设置闹钟及标题提示显示到液晶上 */
 168          void ShowSetAlarm()
 169          {
 170   1          uint8 pdata str[6];
 171   1            
 172   1          str[0] = (SetAlarmHour >> 4) + '0';   //小时
 173   1          str[1] = (SetAlarmHour & 0xF) + '0';
 174   1          str[2] = ':';
 175   1          str[3] = (SetAlarmMin >> 4) + '0';    //分钟
 176   1          str[4] = (SetAlarmMin & 0xF) + '0';
 177   1          str[5] = '\0';
 178   1          LcdShowStr(3, 0, "Set Alarm");  //显示提示标题
 179   1          LcdShowStr(1, 1, str);          //显示设定闹钟值
C51 COMPILER V9.02   TIME                                                                  01/10/2009 00:34:35 PAGE 4   

 180   1      }
 181          
 182           /*时间或闹钟设置时，设置位右移一位，到头后折回 */
 183          void SetRightShift( )  
 184          {
 185   1              
 186   1          if (staSystem == E_SET_Day)
 187   1          {
 188   2                        if(   SetIndex==7)
 189   2                              SetIndex=0;
 190   2              switch (SetIndex)
 191   2              {
 192   3                  case 0:  LcdSetCursor(1, 1);     break;  
 193   3                  case 1:    LcdSetCursor(2, 1);   break;
 194   3                  case 2:      LcdSetCursor(4, 1);  break;  
 195   3                  case 3:  LcdSetCursor(5, 1);         break;
 196   3                  case 4:      LcdSetCursor(7, 1); break;
 197   3                              case 5:  LcdSetCursor(8, 1);     break;
 198   3                              default:        LcdSetCursor(10, 1);            break;
 199   3                   
 200   3              }
 201   2                      
 202   2          }
 203   1          else if (staSystem == E_SET_TIME)
 204   1          {
 205   2                              if(     SetIndex==4)
 206   2                              SetIndex=0;
 207   2              switch (SetIndex)
 208   2              {
 209   3                  case 0:  LcdSetCursor(1,1);  break;
 210   3                  case 1:  LcdSetCursor(2,1);         break;
 211   3                  case 2:    LcdSetCursor(4,1);       break;
 212   3                  default:  LcdSetCursor(5,1); break;
 213   3              }
 214   2              
 215   2          }
 216   1          else if (staSystem == E_SET_ALARM)
 217   1          {
 218   2                      if(     SetIndex==4)
 219   2                              SetIndex=0;
 220   2              switch (SetIndex)
 221   2              {
 222   3                  case 0:    LcdSetCursor(1,1);       break;
 223   3                  case 1:   LcdSetCursor(2,1);         break;
 224   3                  case 2:   LcdSetCursor(4,1);        break;
 225   3                   default:   LcdSetCursor(5,1); break;
 226   3              }
 227   2                      
 228   2          }
 229   1      }
 230          void InputSetNumber()
 231          {
 232   1          
 233   1      
 234   1         if (staSystem == E_SET_Day)
 235   1              {
 236   2                  switch (SetIndex)
 237   2                  {
 238   3                      case 0:  num= (SetTime.year&0x00f0)>>4;
 239   3                                                       num++;
 240   3                                                       if(num>9)
 241   3                                                              num=0;
C51 COMPILER V9.02   TIME                                                                  01/10/2009 00:34:35 PAGE 5   

 242   3                                                       SetTime.year = (SetTime.year&0xFF0F)|(num<<4);
 243   3                                                       
 244   3                              LcdShowChar(1, 1, ascii);LcdSetCursor(1,1);  break;      //年份高位数字
 245   3      
 246   3                      case 1: num= SetTime.year&0x000F;
 247   3                                                      num++;
 248   3                                                      if(num>9)
 249   3                                                              num=0;
 250   3                                                      SetTime.year = (SetTime.year&0xFFF0)|(num);
 251   3                                                 
 252   3                              LcdShowChar(2, 1, ascii);LcdSetCursor(2,1); break;      //年份低位数字
 253   3      
 254   3                      case 2: num= (SetTime.mon&0xf0)>>4;
 255   3                                                      num++;
 256   3                                                      if(num>=2)
 257   3                                                              {
 258   4                                                                      num=0;
 259   4                                                              }
 260   3                                                      SetTime.mon = (SetTime.mon&0x0F)|(num<<4);
 261   3                                                      
 262   3                              LcdShowChar(4, 1, ascii);  LcdSetCursor(4,1); break;      //月份高位数字
 263   3      
 264   3                      case 3: num= SetTime.mon&0x0f;
 265   3                                                      num++;
 266   3                                                      if(     ((SetTime.mon&0xF0)>>4)==1)
 267   3                                                       {
 268   4                                                              if(num>2)
 269   4                                                              {
 270   5                                                                      num=0;
 271   5                                                              }
 272   4                                                        }
 273   3                                                        else if(num>9)
 274   3                                                              num=0;
 275   3                                                      SetTime.mon = (SetTime.mon&0xF0)|(num);
 276   3                                                         
 277   3                              LcdShowChar(5, 1, ascii); LcdSetCursor(5,1); break;      //月份低位数字
 278   3      
 279   3                      case 4: num=(SetTime.day&0xf0)>>4;
 280   3                                                      num++;
 281   3                                                      if(num>3)
 282   3                                                      {
 283   4                                                              num=0;
 284   4                                                      }
 285   3                                                      SetTime.day = (SetTime.day&0x0F)|(num<<4);
 286   3                                                       
 287   3                              LcdShowChar(7, 1, ascii);LcdSetCursor(7,1); break;      //日期高位数字
 288   3                      case 5: num= SetTime.day&0x0f; 
 289   3                                                      num++;
 290   3                                             if(((SetTime.day&0xF0)>>4)==3)
 291   3                                                              {
 292   4                                                              num&=0x01;
 293   4                                                              }
 294   3                                                      else if(num>9)
 295   3                                                              num=0;
 296   3                                                      SetTime.day = (SetTime.day&0xF0)|(num);
 297   3                                                      
 298   3                              LcdShowChar(8, 1, ascii); LcdSetCursor(8,1); break;      //日期低位数字
 299   3                      default:  num1 =SetTime.week&0x0f;
 300   3                                                        num1++;
 301   3                                                              if(num1>6)
 302   3                                                              {
 303   4                                                                      num1=0;
C51 COMPILER V9.02   TIME                                                                  01/10/2009 00:34:35 PAGE 6   

 304   4                                                              }
 305   3                                                              SetTime.week = (SetTime.week&0xF0)|(num1);
 306   3                                                       
 307   3                              LcdShowChar(10, 1, num1);
 308   3                                         LcdSetCursor(10,1);   break;      //星期数字
 309   3                              
 310   3                  }
 311   2                      
 312   2                 }
 313   1         
 314   1       else if (staSystem == E_SET_TIME)
 315   1                       {
 316   2                          switch (SetIndex)
 317   2                              {
 318   3               case 0: num=   (SetTime.hour&0xf0)>>4;
 319   3                                 num++;
 320   3                                 if(num<3)
 321   3                                       {
 322   4                                               num&=0x03;
 323   4                                      }
 324   3                                 else
 325   3                                               num=0;
 326   3                               SetTime.hour = (SetTime.hour&0x0f)|(num<<4);
 327   3                   LcdShowChar(1,1, ascii);LcdSetCursor(1,1); break;      //小时高位数字
 328   3           case 1:            num= SetTime.hour&0x0f;
 329   3                                                 num++;
 330   3                                                if  (((SetTime.hour&0xF0)>>4)==2)
 331   3                                                {
 332   4                                                               if(num<4)
 333   4                                                                      {
 334   5                                                                              num&=0x07;
 335   5                                                                       }
 336   4                                                                else num=0;
 337   4                                                }
 338   3                                                else if(num>9)
 339   3                                                   num=0;
 340   3                                      SetTime.hour = (SetTime.hour&0xF0)|(num);
 341   3                              LcdShowChar(2,1, ascii);LcdSetCursor(2,1); break;      //小时低位数字
 342   3      
 343   3            case 2:    num=  (SetTime.min&0xf0)>>4;
 344   3                                              num++;
 345   3                                              if(num<=5)
 346   3                                                        num&=0x07;
 347   3                                              else 
 348   3                                                              num=0;
 349   3                                      SetTime.min = (SetTime.min&0x0F)|(num<<4);
 350   3                              LcdShowChar(4,1, ascii); LcdSetCursor(4,1);  break;      //分钟高位数字
 351   3      
 352   3            default:   num=  SetTime.min&0x0f;
 353   3                                       num++;
 354   3                                      if(num>9)
 355   3                                              num=0;            
 356   3                                 SetTime.min = (SetTime.min&0xF0)|(num);
 357   3                     LcdShowChar(5,1, ascii); LcdSetCursor(5,1);num&=0x0f ; break;      //分钟低位数字
 358   3                                }
 359   2                      }
 360   1        else if (staSystem == E_SET_ALARM)
 361   1              {
 362   2                  switch (SetIndex)
 363   2                  {
 364   3                case 0:       num = (SetAlarmHour & 0xf0)>>4;
 365   3                                
C51 COMPILER V9.02   TIME                                                                  01/10/2009 00:34:35 PAGE 7   

 366   3                                       num++;
 367   3                                        if(num<3)
 368   3                                       {
 369   4                                               num&=0x03;                                              
 370   4                                       }
 371   3                                 else
 372   3                                 {
 373   4                                  num=0;
 374   4                                      }
 375   3                                  
 376   3                                      LcdShowChar(1,1, ascii);       //小时高位数字
 377   3                                        LcdSetCursor(1,1);
 378   3                                      SetAlarmHour = (SetAlarmHour&0x0F) | (num<<4);
 379   3                      break;  
 380   3                case 1:       num= SetAlarmHour&0x0f;
 381   3                                
 382   3                                                      num++;
 383   3                                                 if  (((SetAlarmHour&0xF0)>>4)==2)
 384   3                                                {
 385   4                                                               if(num<4)
 386   4                                                                      {
 387   5                                                                              num&=0x07;
 388   5                                                                       }
 389   4                                                                else num=0;
 390   4                                                }
 391   3                                              else if(num>9)
 392   3                                              num=0;
 393   3                                              
 394   3                                              LcdShowChar(2,1, ascii);
 395   3                                              LcdSetCursor(2,1); 
 396   3                                       SetAlarmHour = (SetAlarmHour&0xF0)| num;
 397   3                                break;      //小时低位数字
 398   3               case 2:  num = ( (SetAlarmMin&0xf0)>>4);
 399   3                                              num++;
 400   3                               if(num<=5)
 401   3                                                        num&=0x07;
 402   3                                              else num=0;
 403   3                                               
 404   3                                              LcdShowChar(4,1, ascii);
 405   3                                                       LcdSetCursor(4,1);
 406   3                                                              SetAlarmMin = (SetAlarmMin&0x0F) |(num<<4);
 407   3                                         break;      //分钟高位数字
 408   3               default:       num = (SetAlarmMin&0x0f);
 409   3                                               num++;
 410   3                                              if(num>9)
 411   3                                              num=0;
 412   3                                              
 413   3                                                LcdShowChar(5,1, ascii);
 414   3                                                  LcdSetCursor(5,1);
 415   3                                      SetAlarmMin = (SetAlarmMin&0xF0) | num;
 416   3                                break;      //分钟低位数字
 417   3                  }
 418   2                
 419   2              }
 420   1      
 421   1          }      
 422          /* 切换系统运行状态 */
 423          void SwitchSystemSta()
 424          {
 425   1      
 426   1          if (staSystem == E_NORMAL)  //正常运行切换到时间设置
 427   1          {   
C51 COMPILER V9.02   TIME                                                                  01/10/2009 00:34:35 PAGE 8   

 428   2                      
 429   2                      if(m==0)
 430   2                      {
 431   3                 staSystem = E_SET_Day;
 432   3                      SetTime.year = CurTime.year;  //当前时间拷贝到时间设置缓冲区中
 433   3                      SetTime.mon  = CurTime.mon;
 434   3                      SetTime.day  = CurTime.day;
 435   3                      SetTime.week = CurTime.week;
 436   3                      LcdClearScreen();  //液晶清屏
 437   3                      ShowSetDay();     //显示设置时间        
 438   3                      SetIndex = 0;    //与接下来的右移一起将光标设在最左边的位置上
 439   3                      SetRightShift();
 440   3                       LcdOpenCursor();   //开启光标  
 441   3                               delay(1);
 442   3              }
 443   2              }
 444   1        else  if((m==1)&&(staSystem == E_SET_Day))
 445   1                      {
 446   2                               staSystem = E_SET_TIME;
 447   2                      SetTime.hour = CurTime.hour;
 448   2                      SetTime.min  = CurTime.min;
 449   2                      SetTime.sec  = CurTime.sec;
 450   2             
 451   2                      LcdClearScreen();  //液晶清屏
 452   2                      ShowSetTime();     //显示设置时间
 453   2                      
 454   2                      SetIndex = 0;    //与接下来的右移一起将光标设在最左边的位置上
 455   2              SetRightShift();
 456   2                       LcdOpenCursor();   //开启光标 
 457   2                                delay(1);
 458   2              }
 459   1        else if ((m==2)&&(staSystem == E_SET_TIME))  //时间设置切换到闹钟设置
 460   1          {
 461   2               staSystem = E_SET_ALARM;
 462   2              SetTime.sec = 0;          //秒清零，即当设置时间后从0秒开始走时
 463   2              SetRealTime(&SetTime);    //设定时间写入实时时钟
 464   2              SetAlarmHour = AlarmHour; //当前闹钟值拷贝到设置缓冲区
 465   2              SetAlarmMin  = AlarmMin;
 466   2              LcdClearScreen();  //液晶清屏
 467   2                       ShowSetAlarm();    //显示设置闹钟               
 468   2                       SetIndex = 0;    //与接下来的右移一起将光标设在最左边的位置上
 469   2              SetRightShift();
 470   2               LcdOpenCursor();   //开启光标 
 471   2                         delay(1);
 472   2          }   
 473   1        else if ((m==3)&&(staSystem ==E_SET_ALARM)) //时间设置切换到闹钟设置
 474   1           {
 475   2                      staSystem = E_NORMAL;
 476   2                  AlarmHour = SetAlarmHour;  //设定的闹钟值写入闹钟时间
 477   2              AlarmMin  = SetAlarmMin;
 478   2               LcdCloseCursor();  //关闭光标 
 479   2                 delay(1);
 480   2          LcdClearScreen();  //液晶清屏
 481   2          RefreshTime();   //刷新当前时间
 482   2          RefreshDate(1);  //立即刷新日期显示
 483   2          RefreshTemp(1);  //立即刷新温度显示
 484   2          }
 485   1      
 486   1      }
 487          
 488          /* 按键动作函数，根据键码执行相应的操作，keycode-按键键码 */
 489          void KeyAction(uint8 keycode)
C51 COMPILER V9.02   TIME                                                                  01/10/2009 00:34:35 PAGE 9   

 490          {
 491   1       
 492   1          if (keycode ==0x25)  //向左键，向左切换设置位
 493   1          {
 494   2              
 495   2               
 496   2                      m++;
 497   2                        SwitchSystemSta();
 498   2              
 499   2          }
 500   1          else if (keycode == 0x26)  //，向右切换设置位
 501   1          {
 502   2                       if (staSystem == E_NORMAL)  //正常运行切换到时间设置
 503   2               {
 504   3                 key= !key;
 505   3                  bakekey=key;
 506   3                }
 507   2                              SetIndex ++;
 508   2              SetRightShift();
 509   2              
 510   2          }
 511   1          else if (keycode == 0x28)  //调整数值
 512   1          {
 513   2                        if (staSystem == E_NORMAL)  //正常运行切换到时间设置
 514   2                        {
 515   3                              staMute=!staMute;       
 516   3                        }
 517   2                       InputSetNumber();      
 518   2                      
 519   2          }
 520   1         
 521   1       }      


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1929    ----
   CONSTANT SIZE    =     41    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     10      48
   DATA SIZE        =     15       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
